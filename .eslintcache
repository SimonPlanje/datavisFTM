[{"D:\\school\\datavisFTM\\src\\index.js":"1","D:\\school\\datavisFTM\\src\\App.js":"2","D:\\school\\datavisFTM\\src\\reportWebVitals.js":"3","D:\\school\\datavisFTM\\src\\components\\main\\DataVis.js":"4","D:\\school\\datavisFTM\\src\\components\\main\\Filter.js":"5","D:\\school\\datavisFTM\\src\\components\\main\\intro\\DataEx1.js":"6","D:\\school\\datavisFTM\\src\\components\\Header.js":"7","D:\\school\\datavisFTM\\src\\components\\main\\intro\\DataEx2.js":"8","D:\\school\\datavisFTM\\src\\components\\Visualisation.js":"9","D:\\school\\datavisFTM\\src\\helper\\fetchData.js":"10"},{"size":309,"mtime":1610558006973,"results":"11","hashOfConfig":"12"},{"size":204,"mtime":1610558006968,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1610558006973,"results":"14","hashOfConfig":"12"},{"size":1003,"mtime":1610792046195,"results":"15","hashOfConfig":"12"},{"size":3538,"mtime":1610792059944,"results":"16","hashOfConfig":"12"},{"size":296,"mtime":1610559098895,"results":"17","hashOfConfig":"12"},{"size":858,"mtime":1610559098869,"results":"18","hashOfConfig":"12"},{"size":313,"mtime":1610559098901,"results":"19","hashOfConfig":"12"},{"size":5142,"mtime":1610820039671,"results":"20","hashOfConfig":"12"},{"size":2250,"mtime":1610798374394,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"vzmxwy",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\school\\datavisFTM\\src\\index.js",[],["47","48"],"D:\\school\\datavisFTM\\src\\App.js",[],"D:\\school\\datavisFTM\\src\\reportWebVitals.js",[],"D:\\school\\datavisFTM\\src\\components\\main\\DataVis.js",["49"],"import React, { useEffect, useState, useRef } from 'react'\r\n\r\nimport CreateVis from '../Visualisation'\r\nimport fetchData from '../../helper/fetchData'\r\nimport Header from '../Header'\r\nimport DataEx1 from './intro/DataEx1'\r\nimport DataEx2 from './intro/DataEx2'\r\nimport Filter from './Filter'\r\n\r\n\r\nfunction DataVis(){\r\n     \r\n  const [facebookState, setFacebookStates] = useState(null)\r\n  const [filterData, setFilterData] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\nfetchData(setFacebookStates, setFilterData)\r\n  }, [])\r\n\r\n    // useEffect(() => {\r\n    //   localStorage.setItem('filterData', JSON.stringify(filterData))\r\n    // }, [filterData])\r\n  \r\n    return(\r\n        <div className=\"SVGdiv\">\r\n          <Header />\r\n          <DataEx1 />\r\n          <DataEx2 />\r\n          <Filter facebookState={facebookState} setFilterData={setFilterData} filterData={filterData}/>\r\n          <CreateVis facebookState={facebookState} filterData={filterData} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataVis\r\n\r\n","D:\\school\\datavisFTM\\src\\components\\main\\Filter.js",[],"D:\\school\\datavisFTM\\src\\components\\main\\intro\\DataEx1.js",[],"D:\\school\\datavisFTM\\src\\components\\Header.js",["50"],"\r\nfunction Header(){\r\n     \r\n    return(\r\n        <div className=\"div\">\r\n            <img className='headerImg' src=\"https://www.ftm.nl/uploads/cache/article_2800_nocrop/uploads/media/5fc527483804e/politicaladsdatabase-v1.jpg\" alt=\"politics header image\"/>\r\n          <h1>Welke doelgroepen proberen de politieke partijen te bereiken op Facebook?</h1>\r\n          <p>De meeste politieke partijen gebruiken Facebookadvertenties om bepaalde  doelgroepen aan te spreken. Je kunt op Facebook onder andere targeten op geslacht, leeftijd en locatie. De targeting van een advertentie is sterk afhankelijk van de inhoud en het doel van de advertentie. \r\n            Deze visualisatie gaat in op de targeting van geslacht en leeftijd van de politieke partijen over tijd, hierin zijn grote verschillen te zien. </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n","D:\\school\\datavisFTM\\src\\components\\main\\intro\\DataEx2.js",[],"D:\\school\\datavisFTM\\src\\components\\Visualisation.js",["51","52"],"import React, {useRef} from 'react'\r\n\r\nimport {\r\n    select,\r\n    selectAll,\r\n    scaleLinear,\r\n    scaleTime,\r\n    extent,\r\n    scalePoint,\r\n    axisLeft,\r\n    axisBottom,\r\n    scaleOrdinal,\r\n    text,\r\n    \r\n    } from 'd3'\r\n\r\n  function CreateVis({ facebookState, filterData }){\r\n\r\n   \r\n    const width = 1400\r\n    const height = 700\r\n\r\n    const margin = { top: 60, right: 40, bottom: 88, left: 105 };\r\n    const innerWidth = width - margin.left - margin.right;\r\n    const innerHeight = height - margin.top - margin.bottom;\r\n\r\n    const g = select ('g')\r\n    .attr('transform', `translate(${margin.left},${margin.right})`)\r\n\r\n   if(facebookState != null){\r\n    const data = facebookState;\r\n\r\n       //define scales\r\n       const xScale = scaleTime()\r\n       .domain(extent(data, d => d.ad_delivery_start_time))\r\n       .range([0, innerWidth])\r\n\r\n   const yScale = scalePoint()\r\n       .domain(data.map(d => d.advertiser_name))\r\n       .range([innerHeight, 1])\r\n\r\n   const rScale = scaleLinear()\r\n   .domain(extent(data, d => d.avarageImpress))\r\n   .range([20, 50])\r\n\r\n\r\n   const gScale = scaleOrdinal()\r\n       .domain([extent(data, d => d.male), extent(data, d => d.female)])\r\n       .range(['var(--blue)', 'var(--pink)' ])\r\n\r\n   const aScale = scaleOrdinal()\r\n       .domain([\"young\", \"twenty\", \"thirdy\", \"fourty\", \"fifty\", \"sixty\"])\r\n       .range(['var(--blue)', 'var(--darkblue)'])\r\n\r\n\r\n\r\n\r\n       const yAxis = axisLeft(yScale)\r\n       .tickSize(-innerWidth)\r\n\r\n   const yAxisG = g\r\n       .append('g')\r\n       .attr(\"class\", \"yScale\")\r\n       .attr('transform', `translate(${0},${0})`)\r\n       .call(yAxis)\r\n\r\n       yAxisG\r\n       .selectAll('.domain').remove()\r\n\r\n\r\n\r\n       const xAxis = axisBottom(xScale)\r\n\r\n   const xAxisG = g\r\n       .append('g')\r\n       .attr(\"class\", \"xScale\")\r\n       .attr('transform', `translate(${0},${innerHeight + 80})`)\r\n       .call(xAxis)\r\n\r\n       xAxisG\r\n       .selectAll('.domain').remove()\r\n\r\n//render function\r\n\r\nconst render = () => {\r\n    let strokeVar = null;\r\n    if(filterData === \"gender\"){\r\n        strokeVar = d => gScale(d.male)\r\n    }\r\n    else if(filterData === \"age\"){\r\n       strokeVar =  d => aScale(d.thirdy)\r\n    }\r\n\r\n    const circles = g.selectAll('circle')\r\n        .data(data)\r\n    \r\n        circles\r\n        .enter().append('circle')\r\n            .attr('class', 'circles')\r\n            .attr('cx', d => xScale(d.ad_delivery_start_time))\r\n            .attr('cy', d => yScale(d.advertiser_name))\r\n            .attr('r', 2)\r\n            .style(\"opacity\", 1)\r\n            .style('fill', 'white')\r\n            .style('stroke', strokeVar)\r\n            .style('stroke-opacity', 0.2)\r\n            .style('stroke-width', d => rScale(d.avarageImpress))\r\n        circles\r\n        .style('stroke', strokeVar)\r\n        .on('mouseover', handleMouseOver)\r\n        .on('mouseout', handleMouseOut)\r\n\r\n\r\n        circles\r\n        .exit().remove()\r\n        }\r\n\r\n \r\n        function handleMouseOver(d, i) {  // Add interactivity\r\n\r\n            // Use D3 to select element, change color and size\r\n            select(this)\r\n            .attr('r', 20)\r\n            .attr('id', d.toElement.__data__.advertiser_id)\r\n\r\n\r\n            console.log(d.toElement.__data__.advertiser_id)\r\n            // Specify where to put label of text\r\n            g.append('rect')\r\n                .attr('width', 200)\r\n                .attr('height', 200)\r\n                .attr('id', d.toElement.__data__.advertiser_id)\r\n                .attr('x', xScale(d.toElement.__data__.ad_delivery_start_time))\r\n                .attr('y', yScale(d.toElement.__data__.advertiser_name))\r\n                .attr('fill', 'white')\r\n\r\n\r\n            g.append(\"text\")\r\n                .text(d.toElement.__data__.avarageImpress + ' keer bekeken')\r\n                .attr('id', d.toElement.__data__.advertiser_id)\r\n                .attr('x', xScale(d.toElement.__data__.ad_delivery_start_time)+20)\r\n                .attr('y', yScale(d.toElement.__data__.advertiser_name)+30)\r\n                .style('font-family', 'IBM Plex Sans')\r\n\r\n\r\n            g.append(\"text\")\r\n                .text('â‚¬ ' + d.toElement.__data__.avarageSpend + ',-')\r\n                .attr('id', d.toElement.__data__.advertiser_id)\r\n                .attr('x', xScale(d.toElement.__data__.ad_delivery_start_time)+20)\r\n                .attr('y', yScale(d.toElement.__data__.advertiser_name)+60)\r\n                .style('font-family', 'IBM Plex Sans')\r\n          }\r\n\r\n\r\n         function handleMouseOut(d, i) {  // Add interactivity\r\n            select(this)\r\n            .attr('id', d.target.__data__.advertiser_id)\r\n            .attr('fill', 'white')\r\n            .attr('r', 2)\r\n           console.log('.' + +d.target.__data__.advertiser_id) \r\n            selectAll('rect').remove()\r\n            selectAll('#' + d.target.__data__.advertiser_id).remove()\r\n\r\n          }\r\n\r\n       render()\r\n       return(\r\n            <div className='d3div'>\r\n                <svg className=\"svg\" width={width} height={height}>\r\n                    <g></g>\r\n                </svg>\r\n            </div>\r\n        )\r\n    } else{\r\n        return null\r\n    }\r\n}\r\n\r\nexport default CreateVis","D:\\school\\datavisFTM\\src\\helper\\fetchData.js",[],["53","54"],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":38,"nodeType":"61","messageId":"62","endLine":1,"endColumn":44},{"ruleId":"63","severity":1,"message":"64","line":6,"column":13,"nodeType":"65","endLine":6,"endColumn":184},{"ruleId":"59","severity":1,"message":"60","line":1,"column":16,"nodeType":"61","messageId":"62","endLine":1,"endColumn":22},{"ruleId":"59","severity":1,"message":"66","line":13,"column":5,"nodeType":"61","messageId":"62","endLine":13,"endColumn":9},{"ruleId":"55","replacedBy":"67"},{"ruleId":"57","replacedBy":"68"},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'text' is defined but never used.",["69"],["70"],"no-global-assign","no-unsafe-negation"]