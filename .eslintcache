[{"D:\\school\\datavisFTM\\src\\index.js":"1","D:\\school\\datavisFTM\\src\\App.js":"2","D:\\school\\datavisFTM\\src\\reportWebVitals.js":"3","D:\\school\\datavisFTM\\src\\components\\main\\DataVis.js":"4","D:\\school\\datavisFTM\\src\\components\\Visualisation.js":"5","D:\\school\\datavisFTM\\src\\components\\main\\intro\\DataEx1.js":"6","D:\\school\\datavisFTM\\src\\components\\main\\intro\\DataEx2.js":"7","D:\\school\\datavisFTM\\src\\helper\\fetchData.js":"8","D:\\school\\datavisFTM\\src\\components\\main\\intro\\Vis2.js":"9","D:\\school\\datavisFTM\\src\\components\\main\\intro\\Vis1.js":"10","D:\\school\\datavisFTM\\src\\components\\Header.js":"11","D:\\school\\datavisFTM\\src\\components\\main\\Filter.js":"12","D:\\school\\datavisFTM\\src\\components\\main\\intro\\FilterIntro.js":"13"},{"size":309,"mtime":1610558006973,"results":"14","hashOfConfig":"15"},{"size":204,"mtime":1610558006968,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1610558006973,"results":"17","hashOfConfig":"15"},{"size":1424,"mtime":1611067044159,"results":"18","hashOfConfig":"15"},{"size":5559,"mtime":1611068781346,"results":"19","hashOfConfig":"15"},{"size":296,"mtime":1610559098895,"results":"20","hashOfConfig":"15"},{"size":313,"mtime":1610559098901,"results":"21","hashOfConfig":"15"},{"size":11447,"mtime":1611075129971,"results":"22","hashOfConfig":"15"},{"size":4759,"mtime":1610972675049,"results":"23","hashOfConfig":"15"},{"size":4970,"mtime":1611067181434,"results":"24","hashOfConfig":"15"},{"size":858,"mtime":1610559098869,"results":"25","hashOfConfig":"15"},{"size":3537,"mtime":1611058690969,"results":"26","hashOfConfig":"15"},{"size":1307,"mtime":1611081413833,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"j9wklr",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"D:\\school\\datavisFTM\\src\\index.js",[],["62","63"],"D:\\school\\datavisFTM\\src\\App.js",[],"D:\\school\\datavisFTM\\src\\reportWebVitals.js",[],"D:\\school\\datavisFTM\\src\\components\\main\\DataVis.js",["64"],"import React, { useEffect, useState, useRef } from 'react'\r\n\r\nimport CreateVis from '../Visualisation'\r\nimport fetchData from '../../helper/fetchData'\r\nimport Header from '../Header'\r\nimport DataEx1 from './intro/DataEx1'\r\nimport DataEx2 from './intro/DataEx2'\r\nimport Filter from './Filter'\r\nimport Vis1 from './intro/Vis1'\r\nimport Vis2 from './intro/Vis2'\r\nimport FilterIntro from './intro/FilterIntro'\r\n\r\n\r\nfunction DataVis(){\r\n     \r\n  const [facebookState, setFacebookStates] = useState(null)\r\n  const [filterData, setFilterData] = useState(null)\r\n  const [barState, setBarstate] = useState(null)\r\n  const [highLowGenderState, setHighLowGenderState] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\nfetchData(setFacebookStates, setFilterData, setBarstate, setHighLowGenderState)\r\n  }, [])\r\n\r\n    // useEffect(() => {\r\n    //   localStorage.setItem('filterData', JSON.stringify(filterData))\r\n    // }, [filterData])\r\n  \r\n    return(\r\n        <div className=\"SVGdiv\">\r\n          <Header />\r\n          <DataEx1 />\r\n          <Vis1 setBarstate={setBarstate} barState={barState} highLowGenderState={highLowGenderState}/>\r\n          <FilterIntro />\r\n          <DataEx2 />\r\n          <Vis2 />\r\n          <Filter facebookState={facebookState} setFilterData={setFilterData} filterData={filterData}/>\r\n          <CreateVis facebookState={facebookState} filterData={filterData} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataVis\r\n\r\n","D:\\school\\datavisFTM\\src\\components\\Visualisation.js",["65","66","67","68"],"import {\r\n    select,\r\n    selectAll,\r\n    scaleLinear,\r\n    scaleTime,\r\n    extent,\r\n    scalePoint,\r\n    axisLeft,\r\n    axisBottom,\r\n    scaleOrdinal,\r\n    text,\r\n    \r\n    } from 'd3'\r\n\r\n  function CreateVis({ facebookState, filterData }){\r\n\r\n   \r\n    const width = 1400\r\n    const height = 700\r\n\r\n    const margin = { top: 60, right: 40, bottom: 88, left: 105 };\r\n    const innerWidth = width - margin.left - margin.right;\r\n    const innerHeight = height - margin.top - margin.bottom;\r\n\r\n    const g = select('.dashboardGroup')\r\n    .attr('transform', `translate(${margin.left},${margin.right})`)\r\n\r\n\r\n   if(facebookState != null){\r\n    const data = facebookState;\r\n\r\n       //define scales\r\n       const xScale = scaleTime()\r\n       .domain(extent(data, d => d.ad_delivery_start_time))\r\n       .range([0, innerWidth])\r\n\r\n   const yScale = scalePoint()\r\n       .domain(data.map(d => d.advertiser_name))\r\n       .range([innerHeight, 1])\r\n\r\n   const rScale = scaleLinear()\r\n   .domain(extent(data, d => d.avarageImpress))\r\n   .range([20, 50])\r\n\r\n   const gScale = scaleOrdinal()\r\n       .domain([extent(data, d => d.male), extent(data, d => d.female)])\r\n       .range(['var(--blue)', 'var(--pink)' ])\r\n\r\n   const aScale = scaleOrdinal()\r\n       .domain([\"young\", \"twenty\", \"thirdy\", \"fourty\", \"fifty\", \"sixty\"])\r\n       .range(['var(--blue)', 'var(--darkblue)'])\r\n\r\n\r\n\r\n\r\n       const yAxis = axisLeft(yScale)\r\n       .tickSize(-innerWidth)\r\n\r\n   const yAxisG = g\r\n       .append('g')\r\n       .attr(\"class\", \"yScale\")\r\n       .attr('transform', `translate(${0},${0})`)\r\n       .call(yAxis)\r\n\r\n       yAxisG\r\n       .selectAll('.domain').remove()\r\n\r\n\r\n\r\n       const xAxis = axisBottom(xScale)\r\n\r\n   const xAxisG = g\r\n       .append('g')\r\n       .attr(\"class\", \"xScale\")\r\n       .attr('transform', `translate(${0},${innerHeight + 80})`)\r\n       .call(xAxis)\r\n\r\n       xAxisG\r\n       .selectAll('.domain').remove()\r\n\r\n//render function\r\n\r\nconst render = () => {\r\n    let strokeVar = null;\r\n    if(filterData === \"gender\"){\r\n        strokeVar = d => gScale(d.male)\r\n    }\r\n    else if(filterData === \"age\"){\r\n       strokeVar =  d => aScale(d.thirdy)\r\n    }\r\n\r\n    const circles = g.selectAll('circle')\r\n        .data(data)\r\n    \r\n        circles\r\n        .enter().append('circle')\r\n            .attr('class', 'circles')\r\n            .attr('cx', d => xScale(d.ad_delivery_start_time))\r\n            .attr('cy', d => yScale(d.advertiser_name))\r\n            .attr('r', 2)\r\n            .style(\"opacity\", 1)\r\n            .style('fill', 'white')\r\n            .style('stroke', strokeVar)\r\n            .style('stroke-opacity', 0.2)\r\n            .style('stroke-width', d => rScale(d.avarageImpress))\r\n        circles\r\n        .style('stroke', strokeVar)\r\n        .on('mouseover', handleMouseOver)\r\n        .on('mouseout', handleMouseOut)\r\n\r\n\r\n        circles\r\n        .exit().remove()\r\n        }\r\n\r\n \r\n        function handleMouseOver(d, i) {  // Add interactivity\r\n\r\n            // Use D3 to select element, change color and size\r\n            let detail = select(this)\r\n\r\n            detail\r\n            .attr('r', 20)\r\n            .text('â‚¬ ' + d.toElement.__data__.avarageSpend + ',-')\r\n            .attr('x', xScale(d.toElement.__data__.ad_delivery_start_time)+20)\r\n            .attr('y', yScale(d.toElement.__data__.advertiser_name)+60)\r\n            .style('font-family', 'IBM Plex Sans')\r\n\r\n            // Specify where to put label of text\r\n            g.append('rect')\r\n                .attr('width', 200)\r\n                .attr('height', 200)\r\n                .attr('class', d.toElement.__data__.advertiser_id)\r\n                .attr('x', xScale(d.toElement.__data__.ad_delivery_start_time))\r\n                .attr('y', yScale(d.toElement.__data__.advertiser_name))\r\n                .attr('fill', 'white')\r\n\r\n\r\n                g.append(\"text\")\r\n                .text(d.toElement.__data__.avarageImpress + ' keer bekeken')\r\n                .attr('class', d.toElement.__data__.advertiser_id)\r\n                .attr('x', xScale(d.toElement.__data__.ad_delivery_start_time)+20)\r\n                .attr('y', yScale(d.toElement.__data__.advertiser_name)+30)\r\n                .style('font-family', 'IBM Plex Sans')\r\n\r\n\r\n            g.append(\"text\")\r\n                .text('â‚¬ ' + d.toElement.__data__.avarageSpend + ',-')\r\n                .attr('class', d.toElement.__data__.advertiser_id)\r\n                .attr('x', xScale(d.toElement.__data__.ad_delivery_start_time)+20)\r\n                .attr('y', yScale(d.toElement.__data__.advertiser_name)+60)\r\n                .style('font-family', 'IBM Plex Sans')\r\n          }\r\n\r\n\r\n         function handleMouseOut(d, i) {  // Add interactivity\r\n            let element = select(`[class=` + '\"' + d.target.__data__.advertiser_id + '\"' + ']')\r\n\r\n            console.log(element)\r\n            select(`[class=\"${d.target.__data__.advertiser_id}\"]`)\r\n            .remove()\r\n\r\n\r\n            .attr('id', d.target.__data__.advertiser_id)\r\n            .attr('fill', 'white')\r\n            .attr('r', 2)\r\n        //    console.log('.' + +d.target.__data__.advertiser_id) \r\n            // selectAll('rect').remove()\r\n        //     selectAll('#' + d.target.__data__.advertiser_id).remove()\r\n\r\n          }\r\n\r\n       render()\r\n       return(\r\n            <div className='d3div'>\r\n                <svg className=\"dashboard\" width={width} height={height}>\r\n                    <g className='dashboardGroup'></g>\r\n                </svg>\r\n            </div>\r\n        )\r\n    } else{\r\n        return null\r\n    }\r\n}\r\n\r\nexport default CreateVis","D:\\school\\datavisFTM\\src\\components\\main\\intro\\DataEx1.js",[],"D:\\school\\datavisFTM\\src\\components\\main\\intro\\DataEx2.js",[],"D:\\school\\datavisFTM\\src\\helper\\fetchData.js",["69","70","71"],"import {json} from 'd3'\r\n\r\nconst fetchData = (setFacebookStates, setFilterData, setBarstate, setHighLowGenderState) =>{\r\n\r\n    const facebookData = \"https://raw.githubusercontent.com/SimonPlanje/datavisFTM/main/public/data/data.json\"\r\n\r\n    json(facebookData).then(data => {\r\n\r\n\r\n\r\n\r\n//LOOP FOR GETTING ALL THE UNIQUE ITEMS\r\n//         let uniqueData = []\r\n//         let indexData = -1;\r\n\r\n// for(let c=0; c<data.length-1;) {\r\n//         for(let i=0; i<data.length-1; ++i) {\r\n//             if(data[c].ad_delivery_start_time !== data[i+1].ad_delivery_start_time && data[c].advertiser_name !== data[i+1].advertiser_name){\r\n//                 // console.log(indexData)\r\n//                 uniqueData.push(data[i])\r\n//                 ++indexData\r\n//             if(c >= data.length){\r\n//                 ++c\r\n//                 i = 0\r\n//             }\r\n\r\n                // let objectClone = [data[i].avarageImpress + data[i+1].avarageImpress]\r\n                // console.log(data[i].avarageImpress + data[i+1].avarageImpress)   \r\n// console.log(uniqueData[indexData])\r\n// console.log(data[i])\r\n\r\n    //             if(uniqueData[indexData].ad_delivery_start_time === data[i+1].ad_delivery_start_time){\r\n\r\n    //                 console.log('dont add')\r\n    //             } else {\r\n    //                 // uniqueData.push(data[indexData])\r\n\r\n    //             }\r\n  \r\n    //         }\r\n    //     }\r\n    // }\r\n    // console.log(uniqueData)\r\n\r\n//     for(let i=0; i<data.length-1; ++i) {\r\n//         let lowest = []\r\n//         if(data[i].male > data[i+1].male){\r\n\r\n//             lowest = data[i]\r\n\r\n\r\n//             let lowest = [data[i].male + data[i+1].male]\r\n//             console.log(data[i])\r\n//             // console.log(data[i].avarageImpress + data[i+1].avarageImpress)   \r\n\r\n//         }\r\n// }\r\n\r\n\r\n\r\n        data.forEach(d => {\r\n            d.ad_delivery_start_time = new Date(d.ad_delivery_start_time)\r\n            d.ad_creation_time = new Date(d.ad_creation_time)\r\n            d.avarageImpress = (+d.impressions_upper_bound + +d.impressions_lower_bound) / 2\r\n            d.avarageSpend = (+d.spend_upper_bound + +d.spend_lower_bound) / 2\r\n            d.male = +d.male_fifty + +d.male_fourty + +d.male_sixty + +d.male_teener + +d.male_thirdy + +d.male_twenty + +d.male_young\r\n            d.female = +d.female_fifty + +d.female_fourty + +d.female_sixty + +d.female_teener + +d.female_thirdy + +d.female_twenty + +d.female_young\r\n            d.unknown = +d.unknown_fifty + +d.unknown_fourty + +d.unknown_sixty + +d.unknown_teener + +d.unknown_thirdy + +d.unknown_twenty + +d.unknown_young\r\n            d.young = +d.unknown_young + +d.male_young + +d.female_young\r\n            d.teener = +d.unknown_teener + +d.male_teener + +d.female_teener\r\n            d.twenty = +d.unknown_twenty + +d.male_twenty + +d.female_twenty\r\n            d.thirdy = +d.unknown_thirdy + +d.male_thirdy + +d.female_thirdy\r\n            d.fourty =  +d.unknown_fourty + +d.male_fourty + +d.female_fourty\r\n            d.fifty = +d.unknown_fifty + +d.male_fifty + +d.female_fifty\r\n            d.sixty = +d.unknown_sixty + +d.male_sixty + +d.female_sixty\r\n        })\r\n\r\n        let d66 = []\r\n        let vvd = []\r\n        let denk = []\r\n        let pvdd = []\r\n        let pvda = []\r\n        let groenlinks = []\r\n        let christenunie = []\r\n        let plus = []\r\n        let sgp = []\r\n        let cda = []\r\n        let fvd = []\r\n        let sp = []\r\n       \r\n\r\n        data.map((d) => {\r\n            if(d.advertiser_name === \"D66\"){\r\n                d66.push(d)}\r\n            if(d.advertiser_name === \"VVD\"){\r\n                vvd.push(d)}\r\n            if(d.advertiser_name === \"DENK\"){\r\n                denk.push(d)}\r\n            if(d.advertiser_name === \"PvdD\"){\r\n                pvdd.push(d)}\r\n            if(d.advertiser_name === \"ChristenUnie\"){\r\n                christenunie.push(d)}\r\n            if(d.advertiser_name === \"PvdA\"){\r\n            pvda.push(d)}\r\n            if(d.advertiser_name === \"GroenLinks\"){\r\n            groenlinks.push(d)}\r\n            if(d.advertiser_name === \"50Plus\"){\r\n            plus.push(d)}\r\n            if(d.advertiser_name === \"SGP\"){\r\n            sgp.push(d)}\r\n            if(d.advertiser_name === \"CDA\"){\r\n            cda.push(d)}\r\n            if(d.advertiser_name === \"FvD\"){\r\n            fvd.push(d)}\r\n            if(d.advertiser_name === \"SP\"){\r\n            sp.push(d)}\r\n             })\r\n\r\n\r\n//AGE FORMATTING\r\n\r\nlet youngvaluesd66 =[]\r\nlet teenervaluesd66 =[]\r\nlet oldvaluesd66 =[]\r\n\r\n\r\nlet youngvaluesvvd =[]\r\nlet teenervaluesvvd =[]\r\nlet oldvaluesvvd =[]\r\n\r\n\r\nlet youngvaluesdenk =[]\r\nlet teenervaluesdenk =[]\r\nlet oldvaluesdenk =[]\r\n\r\nlet youngvaluespvdd =[]\r\nlet teenervaluespvdd =[]\r\nlet oldvaluespvdd =[]\r\n\r\nlet youngvaluespvda =[]\r\nlet teenervaluespvda =[]\r\nlet oldvaluespvda =[]\r\n\r\nlet youngvaluesgroenlinks =[]\r\nlet teenervaluesgroenlinks =[]\r\nlet oldvaluesgroenlinks =[]\r\n\r\nlet youngvalueschristenunie =[]\r\nlet teenervalueschristenunie =[]\r\nlet oldvalueschristenunie =[]\r\n\r\nlet youngvaluesplus =[]\r\nlet teenervaluesplus =[]\r\nlet oldvaluesplus =[]\r\n\r\nlet youngvaluessgp =[]\r\nlet teenervaluessgp =[]\r\nlet oldvaluessgp =[]\r\n\r\nlet youngvaluescda =[]\r\nlet teenervaluescda =[]\r\nlet oldvaluescda =[]\r\n\r\nlet youngvaluesfvd =[]\r\nlet teenervaluesfvd =[]\r\nlet oldvaluesfvd =[]\r\n\r\nlet youngvaluessp =[]\r\nlet teenervaluessp =[]\r\nlet oldvaluessp =[]\r\n\r\n// console.log(teenervaluessp)\r\n// console.log(oldvaluessp)\r\n\r\nsp.map(d => youngvaluessp.push(d.twenty+d.young))\r\nsp.map(d => teenervaluessp.push(d.thirdy+d.fourty))\r\nsp.map(d => oldvaluessp.push(d.fifty+d.sixty))\r\n\r\nd66.map(d => youngvaluesd66.push(d.twenty+d.young))\r\nd66.map(d => teenervaluesd66.push(d.thirdy+d.fourty))\r\nd66.map(d => oldvaluesd66.push(d.fifty+d.sixty))\r\n\r\nvvd.map(d => youngvaluesvvd.push(d.twenty+d.young))\r\nvvd.map(d => teenervaluesvvd.push(d.thirdy+d.fourty))\r\nvvd.map(d => oldvaluesvvd.push(d.fifty+d.sixty))\r\n\r\ndenk.map(d => youngvaluesdenk.push(d.twenty+d.young))\r\ndenk.map(d => teenervaluesdenk.push(d.thirdy+d.fourty))\r\ndenk.map(d => oldvaluesdenk.push(d.fifty+d.sixty))\r\n\r\npvdd.map(d => youngvaluespvdd.push(d.twenty+d.young))\r\npvdd.map(d => teenervaluespvdd.push(d.thirdy+d.fourty))\r\npvdd.map(d => oldvaluespvdd.push(d.fifty+d.sixty))\r\n\r\npvda.map(d => youngvaluespvda.push(d.twenty+d.young))\r\npvda.map(d => teenervaluespvda.push(d.thirdy+d.fourty))\r\npvda.map(d => oldvaluespvda.push(d.fifty+d.sixty))\r\n\r\ngroenlinks.map(d => youngvaluesgroenlinks.push(d.twenty+d.young))\r\ngroenlinks.map(d => teenervaluesgroenlinks.push(d.thirdy+d.fourty))\r\ngroenlinks.map(d => oldvaluesgroenlinks.push(d.fifty+d.sixty))\r\n\r\nchristenunie.map(d => youngvalueschristenunie.push(d.twenty+d.young))\r\nchristenunie.map(d => teenervalueschristenunie.push(d.thirdy+d.fourty))\r\nchristenunie.map(d => oldvalueschristenunie.push(d.fifty+d.sixty))\r\n\r\nplus.map(d => youngvaluesplus.push(d.twenty+d.young))\r\nplus.map(d => teenervaluesplus.push(d.thirdy+d.fourty))\r\nplus.map(d => oldvaluesplus.push(d.fifty+d.sixty))\r\n\r\nsgp.map(d => youngvaluessgp.push(d.twenty+d.young))\r\nsgp.map(d => teenervaluessgp.push(d.thirdy+d.fourty))\r\nsgp.map(d => oldvaluessgp.push(d.fifty+d.sixty))\r\n\r\ncda.map(d => youngvaluescda.push(d.twenty+d.young))\r\ncda.map(d => teenervaluescda.push(d.thirdy+d.fourty))\r\ncda.map(d => oldvaluescda.push(d.fifty+d.sixty))\r\n\r\nfvd.map(d => youngvaluesfvd.push(d.twenty+d.young))\r\nfvd.map(d => teenervaluesfvd.push(d.thirdy+d.fourty))\r\nfvd.map(d => oldvaluesfvd.push(d.fifty+d.sixty))\r\n\r\nconst allAgeArray = []\r\n\r\nconst arrAver = arr => {\r\n    allAgeArray.push(arr.reduce((a,b) => a + b, 0) / arr.length)}\r\n\r\n\r\narrAver(youngvaluessp)\r\narrAver(teenervaluessp)\r\narrAver(oldvaluessp)\r\n\r\narrAver(youngvaluesd66)\r\narrAver(teenervaluesd66)\r\narrAver(oldvaluesd66)\r\n\r\narrAver(youngvaluesvvd)\r\narrAver(teenervaluesvvd)\r\narrAver(oldvaluesvvd)\r\n\r\narrAver(youngvaluesdenk)\r\narrAver(teenervaluesdenk)\r\narrAver(oldvaluesdenk)\r\n\r\narrAver(youngvaluespvdd)\r\narrAver(teenervaluespvdd)\r\narrAver(oldvaluespvdd)\r\n\r\narrAver(youngvaluespvda)\r\narrAver(teenervaluespvda)\r\narrAver(oldvaluespvda)\r\n\r\narrAver(youngvaluesgroenlinks)\r\narrAver(teenervaluesgroenlinks)\r\narrAver(oldvaluesgroenlinks)\r\n\r\narrAver(youngvalueschristenunie)\r\narrAver(teenervalueschristenunie)\r\narrAver(oldvalueschristenunie)\r\n\r\narrAver(youngvaluesplus)\r\narrAver(teenervaluesplus)\r\narrAver(oldvaluesplus)\r\n\r\narrAver(youngvaluessgp)\r\narrAver(teenervaluessgp)\r\narrAver(oldvaluessgp)\r\n\r\narrAver(youngvaluescda)\r\narrAver(teenervaluescda)\r\narrAver(oldvaluescda)\r\n\r\narrAver(youngvaluesfvd)\r\narrAver(teenervaluesfvd)\r\narrAver(oldvaluesfvd)\r\n\r\nconsole.log(allAgeArray)\r\nconst getCompaniesAge = ['SP-jong', 'SP-volwassen', 'SP-oud','D66-jong','D66-volwassen','D66-oud', 'VVD-jong', 'VVD-volwassen','VVD-oud','DENK-jong', 'DENK-volwassen', 'DENK-oud', 'PvdD-jong', 'PvdD-volwassen', 'PvdD-oud', 'PvdA-jong', 'PvdA-volwassen', 'PvdA-oud','GroenLinks-jong', 'GroenLinks-volwassen', 'GroenLinks-oud','ChristenUnie-jong', 'ChristenUnie-volwassen', 'ChristenUnie-oud', '50Plus-jong', '50Plus-volwassen', '50Plus-oud', 'SGP-jong', 'SGP-volwassen', 'SGP-oud', 'CDA-jong', 'CDA-volwassen', 'CDA-oud', 'FvD-jong',  'FvD-volwassen', 'FvD-oud']\r\n\r\nlet ageArray = getCompaniesAge.map((d, i) => [d,  +allAgeArray[i]]);\r\n\r\nconsole.log(ageArray)\r\n\r\n//BARCHARRT GENDER\r\n\r\nconst getCompanies = ['PvdA', 'ChristenUnie', 'PvdD', 'GroenLinks', '50Plus', 'D66', 'SGP', 'CDA', 'SP', 'DENK', 'VVD', 'FvD']\r\n\r\n\r\nlet valuesd66 =[]\r\nlet valuesvvd =[]\r\nlet valuesdenk =[]\r\nlet valuespvdd =[]\r\nlet valuespvda =[]\r\nlet valuesgroenlinks =[]\r\nlet valueschristenunie =[]\r\nlet valuesplus =[]\r\nlet valuessgp =[]\r\nlet valuescda =[]\r\nlet valuesfvd =[]\r\nlet valuessp =[]\r\n\r\nsp.map(d => valuessp.push(d.male))\r\nvvd.map(d => valuesvvd.push(d.male))\r\ndenk.map(d => valuesdenk.push(d.male))\r\npvdd.map(d => valuespvdd.push(d.male))\r\npvda.map(d => valuespvda.push(d.male))\r\ngroenlinks.map(d => valuesgroenlinks.push(d.male))\r\nchristenunie.map(d => valueschristenunie.push(d.male))\r\nplus.map(d => valuesplus.push(d.male))\r\nsgp.map(d => valuessgp.push(d.male))\r\ncda.map(d => valuescda.push(d.male))\r\nfvd.map(d => valuesfvd.push(d.male))\r\nd66.map(d => valuesd66.push(d.male))\r\n\r\nconsole.log(valuessp)\r\n\r\nlet politicsArray = []\r\n// console.log(politicsArray)\r\nconst arrAvg = arr => {\r\n    politicsArray.push(arr.reduce((a,b) => a + b, 0) / arr.length)}\r\n\r\n\r\n// console.log(politicsArray)\r\n\r\narrAvg(valuespvda)\r\narrAvg(valueschristenunie)\r\narrAvg(valuespvdd)\r\narrAvg(valuesgroenlinks)\r\narrAvg(valuesplus)\r\narrAvg(valuesd66)\r\narrAvg(valuessgp)\r\narrAvg(valuescda)\r\narrAvg(valuessp)\r\narrAvg(valuesdenk)\r\narrAvg(valuesvvd)\r\narrAvg(valuesfvd)\r\n\r\n\r\nlet companyValue = getCompanies.map((d, i) => [d,  +politicsArray[i]]);\r\nlet minMaxArray = []\r\n\r\nlet poliMin = Math.min(...politicsArray)    \r\nlet poliMax = Math.max(...politicsArray)   \r\n\r\n    companyValue.map(d =>{\r\n        if(poliMin === d[1]){\r\n            minMaxArray.push(d[0])\r\n        } else if(poliMax === d[1]){\r\n            minMaxArray.push(d[0])\r\n        }\r\n    })\r\n\r\nlet highLowData = []\r\n\r\ndata.filter(d => {\r\n    if(d.advertiser_name === minMaxArray[1]){\r\n        highLowData.push(d)\r\n    }else if(d.advertiser_name === minMaxArray[0]){\r\n        highLowData.push(d)\r\n    }else{\r\n    }\r\n})\r\n\r\n\r\nif(highLowData != null){\r\n    // console.log(data)\r\n    setHighLowGenderState(highLowData)\r\n    setBarstate(companyValue)\r\n    setFacebookStates(data)\r\n    setFilterData('gender')\r\n}\r\n\r\n    })\r\n}\r\n\r\nexport default fetchData","D:\\school\\datavisFTM\\src\\components\\main\\intro\\Vis2.js",["72","73","74","75","76","77","78","79"],"import {\r\n    select,\r\n    scaleLinear,\r\n    scaleTime,\r\n    extent,\r\n    scalePoint,\r\n    axisLeft,\r\n    axisBottom,\r\n    scaleOrdinal,\r\n    \r\n    } from 'd3'\r\n\r\nfunction Vis2({ facebookState, filterData }){\r\n\r\n    \r\n   \r\n    //     const width = 1400\r\n    //     const height = 700\r\n    \r\n    //     const margin = { top: 60, right: 40, bottom: 88, left: 105 };\r\n    //     const innerWidth = width - margin.left - margin.right;\r\n    //     const innerHeight = height - margin.top - margin.bottom;\r\n    \r\n    //     const g = select ('g')\r\n    //     .attr('transform', `translate(${margin.left},${margin.right})`)\r\n    \r\n        \r\n    \r\n    //     if(facebookState != null){\r\n    //     const data = facebookState;\r\n    \r\n    //        //define scales\r\n    //        const xScale = scaleTime()\r\n    //        .domain(extent(data, d => d.ad_delivery_start_time))\r\n    //        .range([0, innerWidth])\r\n    \r\n    //    const yScale = scalePoint()\r\n    //        .domain(data.map(d => d.advertiser_name))\r\n    //        .range([innerHeight, 1])\r\n    \r\n    //    const rScale = scaleLinear()\r\n    //    .domain(extent(data, d => d.avarageImpress))\r\n    //    .range([20, 50])\r\n    \r\n    \r\n    //    const gScale = scaleOrdinal()\r\n    //        .domain([extent(data, d => d.male), extent(data, d => d.female)])\r\n    //        .range(['var(--blue)', 'var(--pink)' ])\r\n    \r\n    //    const aScale = scaleOrdinal()\r\n    //        .domain([\"young\", \"twenty\", \"thirdy\", \"fourty\", \"fifty\", \"sixty\"])\r\n    //        .range(['var(--blue)', 'var(--darkblue)'])\r\n    \r\n    \r\n    \r\n    \r\n    //        const yAxis = axisLeft(yScale)\r\n    //        .tickSize(-innerWidth)\r\n    \r\n    //    const yAxisG = g\r\n    //        .append('g')\r\n    //        .attr(\"class\", \"yScale\")\r\n    //        .attr('transform', `translate(${0},${0})`)\r\n    //        .call(yAxis)\r\n    \r\n    //        yAxisG\r\n    //        .selectAll('.domain').remove()\r\n    \r\n    \r\n    \r\n    //        const xAxis = axisBottom(xScale)\r\n    \r\n    //    const xAxisG = g\r\n    //        .append('g')\r\n    //        .attr(\"class\", \"xScale\")\r\n    //        .attr('transform', `translate(${0},${innerHeight + 80})`)\r\n    //        .call(xAxis)\r\n    \r\n    //        xAxisG\r\n    //        .selectAll('.domain').remove()\r\n    \r\n    // //render function\r\n    \r\n    // const render = () => {\r\n    //     let strokeVar = null;\r\n    //     if(filterData === \"gender\"){\r\n    //         strokeVar = d => gScale(d.male)\r\n    //     }\r\n    //     else if(filterData === \"age\"){\r\n    //        strokeVar =  d => aScale(d.thirdy)\r\n    //     }\r\n    \r\n    //     const circles = g.selectAll('circle')\r\n    //         .data(data)\r\n        \r\n    //         circles\r\n    //         .enter().append('circle')\r\n    //             .attr('class', 'circles')\r\n    //             .attr('cx', d => xScale(d.ad_delivery_start_time))\r\n    //             .attr('cy', d => yScale(d.advertiser_name))\r\n    //             .attr('r', 2)\r\n    //             .style(\"opacity\", 1)\r\n    //             .style('fill', 'white')\r\n    //             .style('stroke', strokeVar)\r\n    //             .style('stroke-opacity', 0.2)\r\n    //             .style('stroke-width', d => rScale(d.avarageImpress))\r\n    //         circles\r\n    //         .style('stroke', strokeVar)\r\n    //         .on('click', handleMouseOver)\r\n    \r\n    \r\n    //         circles\r\n    //         .exit().remove()\r\n    //         }\r\n    \r\n     \r\n    //         function handleMouseOver(d, i) {  // Add interactivity\r\n    \r\n    //             // Use D3 to select element, change color and size\r\n    //             select(this)\r\n    //             .attr('fill', 'black')\r\n    //             .attr('r', 20)\r\n    //             console.log(d.toElement.__data__)\r\n    //             // Specify where to put label of text\r\n    //             g.append('rect')\r\n    //                 .attr('width', 200)\r\n    //                 .attr('height', 200)\r\n    //                 .attr('x', xScale(d.toElement.__data__.ad_delivery_start_time))\r\n    //                 .attr('y', yScale(d.toElement.__data__.advertiser_name))\r\n    //                 .attr('fill', 'red')\r\n    \r\n    \r\n    //             g.append(\"text\")\r\n    //                 .text(d.toElement.__data__.avarageImpress)\r\n    //                 .attr('id', d.toElement.__data__.advertiser_id)\r\n    //                 .attr('x', xScale(d.toElement.__data__.ad_delivery_start_time))\r\n    //                 .attr('y', yScale(d.toElement.__data__.advertiser_name))\r\n    //           }\r\n    \r\n    //        render()\r\n     \r\n\r\n    return(\r\n        <div>\r\n        {/* <svg \r\n        // width={width} \r\n        // height={height}\r\n        >\r\n            <g></g>\r\n        </svg> */}\r\n    </div>\r\n    )\r\n}\r\n// }\r\n\r\nexport default Vis2\r\n\r\n",["80","81"],"D:\\school\\datavisFTM\\src\\components\\main\\intro\\Vis1.js",["82"],"import {\r\n    select,\r\n    scaleLinear,\r\n    scaleBand,\r\n    extent,\r\n    scalePoint,\r\n    scaleTime,\r\n    axisLeft,\r\n    axisBottom,\r\n    scaleOrdinal,\r\n    max\r\n    \r\n    } from 'd3'\r\n\r\nfunction Vis1({ barState, highLowGenderState}){\r\n\r\n    const width = 1400\r\n    const height = 200\r\n\r\n    const widtha = 400\r\n    const heighta = 200\r\n\r\n    const margina = { top: 60, right: 40, bottom: 88, left: 105 };\r\n    const innerWidtha = widtha - margina.left - margina.right;\r\n    const innerHeighta = heighta - margina.top - margina.bottom;\r\n\r\n    const widthb = 1000\r\n    const heightb = 200\r\n\r\n    const marginb = { top: 60, right: 40, bottom: 88, left: 105 };\r\n    const innerWidthb = widthb - marginb.left - marginb.right;\r\n    const innerHeightb = heightb - marginb.top - marginb.bottom;\r\n\r\n\r\n\r\n\r\n    const gb = select ('.vis1Bubble')\r\n    .attr('transform', `translate(${marginb.left},${marginb.right})`)\r\n\r\n    const g = select ('.vis1Bar')\r\n    .attr('transform', `translate(${margina.left},${margina.right})`)\r\n    .attr('transform', 'translate(' + (1000) + ', 0)')\r\n\r\n\r\n    if(barState != null && highLowGenderState != null){\r\n    const datab = highLowGenderState\r\n    const data = barState\r\n\r\n//BUBBLEPLOT------------------------------------------------------\r\n       //define scales\r\n       const xScaleb = scaleTime()\r\n       .domain(extent(datab, d => d.ad_delivery_start_time))\r\n       .range([0, innerWidthb])\r\n\r\n\r\n   const yScaleb = scalePoint()\r\n       .domain(datab.map(d => d.advertiser_name))\r\n       .range([innerHeightb, 1])\r\n\r\n   const rScaleb = scaleLinear()\r\n   .domain(extent(datab, d => d.avarageImpress))\r\n   .range([20, 50])\r\n\r\n\r\n   const gScaleb = scaleOrdinal()\r\n       .domain([extent(datab, d => d.male), extent(data, d => d.female)])\r\n       .range(['var(--blue)', 'var(--pink)' ])\r\n\r\n\r\n       const yAxisb = axisLeft(yScaleb)\r\n       .tickSize(-innerWidthb)\r\n\r\n   const yAxisGb = gb\r\n       .append('g')\r\n       .attr(\"class\", \"yScale\")\r\n       .attr('transform', `translate(${0},${0})`)\r\n       .call(yAxisb)\r\n\r\n       yAxisGb\r\n       .selectAll('.domain').remove()\r\n\r\n\r\n\r\n       const xAxisb = axisBottom(xScaleb)\r\n\r\n   const xAxisGb = gb\r\n       .append('g')\r\n       .attr(\"class\", \"xScale\")\r\n       .attr('transform', `translate(${0},${innerHeightb + 50})`)\r\n       .call(xAxisb)\r\n\r\n       xAxisGb\r\n       .selectAll('.domain').remove()\r\n\r\n\r\n       const circlesb = gb.selectAll('circle')\r\n        .data(datab)\r\n    \r\n        circlesb\r\n        .enter().append('circle')\r\n            .attr('class', 'circles')\r\n            .attr('cx', d => xScaleb(d.ad_delivery_start_time))\r\n            .attr('cy', d => yScaleb(d.advertiser_name))\r\n            .attr('r', 2)\r\n            .style(\"opacity\", 1)\r\n            .style('fill', 'white')\r\n            .style('stroke', d => gScaleb(d.male))\r\n            .style('stroke-opacity', 0.2)\r\n            .style('stroke-width', d => rScaleb(d.avarageImpress))\r\n\r\n\r\n//BARCHART--------------------------------------------------------\r\n    const yScale = scaleLinear()\r\n    .domain([0,1])\r\n    .range([0, innerHeighta])\r\n\r\n    const xScale = scaleBand()\r\n    .domain(data.map(d => d[0]))\r\n    .range([0, innerWidtha])\r\n    .padding(0.3)\r\n\r\n    const cScale = scaleLinear()\r\n        .domain(extent(data.map(d => d[1])))\r\n        .range(['#FF32AE', '#00B1FF'])\r\n\r\n        \r\n    // const yAxis = axisLeft(yScale)\r\n\r\n    // const yAxisG = g\r\n    //     .append('g')\r\n    //     .attr(\"class\", \"yScale\")\r\n    //     .attr('transform', `translate(${0},${0})`)\r\n    //     // .call(yAxis)\r\n\r\n    // yAxisG\r\n    // .selectAll('.domain').remove()\r\n\r\n    const xAxis = axisBottom(xScale)\r\n\r\n        // .tickSize(-innerHeight)\r\n\r\n    const xAxisG = g\r\n        .append('g')\r\n        .attr(\"class\", \"xScale\")\r\n        .attr('transform', `translate(${0},${innerHeighta })`)\r\n        .call(xAxis)\r\n\r\n    xAxisG\r\n    .selectAll('text')\r\n        .attr(\"x\", 10)\r\n        .attr(\"y\", 0)\r\n        .style(\"text-anchor\", \"start\")\r\n        .attr(\"transform\", \"rotate(75)\")\r\n\r\n\r\n    xAxisG\r\n    .selectAll('.domain').remove()\r\n\r\n\r\n    xAxisG\r\n    .selectAll('line').remove()\r\n\r\n\r\n\r\n    g.selectAll('rect').data(data)\r\n        .enter().append('rect')\r\n        .attr('x', d => xScale(d[0]))\r\n        .attr('y', d => -yScale(d[1])+innerHeighta)\r\n        .attr('height', d => yScale(d[1]))\r\n        .attr('width', xScale.bandwidth())\r\n        .attr(\"fill\", d => cScale(d[1]))\r\n\r\n        g.selectAll('text').data(data)\r\n        // g.selectAll('rect').data(data)\r\n        // .enter().append('rect')\r\n        //   .attr('y', d => yScale(yValue(d)))\r\n        //   .attr('width', d => xScale(xValue(d)))\r\n        //   .attr('height', yScale.bandwidth());\r\n\r\n\r\n    }else{console.log('data not loaded')}\r\n\r\n    return(\r\n        <div className='visbox1'>\r\n        <svg width={width} height={height}>\r\n        <g className='vis1Bubble'></g>\r\n        <g className='vis1Bar'></g>\r\n        </svg>\r\n    </div>\r\n    )}\r\n\r\n\r\nexport default Vis1\r\n\r\n","D:\\school\\datavisFTM\\src\\components\\Header.js",["83"],"\r\nfunction Header(){\r\n     \r\n    return(\r\n        <div className=\"div\">\r\n            <img className='headerImg' src=\"https://www.ftm.nl/uploads/cache/article_2800_nocrop/uploads/media/5fc527483804e/politicaladsdatabase-v1.jpg\" alt=\"politics header image\"/>\r\n          <h1>Welke doelgroepen proberen de politieke partijen te bereiken op Facebook?</h1>\r\n          <p>De meeste politieke partijen gebruiken Facebookadvertenties om bepaalde  doelgroepen aan te spreken. Je kunt op Facebook onder andere targeten op geslacht, leeftijd en locatie. De targeting van een advertentie is sterk afhankelijk van de inhoud en het doel van de advertentie. \r\n            Deze visualisatie gaat in op de targeting van geslacht en leeftijd van de politieke partijen over tijd, hierin zijn grote verschillen te zien. </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n","D:\\school\\datavisFTM\\src\\components\\main\\Filter.js",[],"D:\\school\\datavisFTM\\src\\components\\main\\intro\\FilterIntro.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":1,"column":38,"nodeType":"90","messageId":"91","endLine":1,"endColumn":44},{"ruleId":"88","severity":1,"message":"92","line":3,"column":5,"nodeType":"90","messageId":"91","endLine":3,"endColumn":14},{"ruleId":"88","severity":1,"message":"93","line":11,"column":5,"nodeType":"90","messageId":"91","endLine":11,"endColumn":9},{"ruleId":"94","severity":1,"message":"95","line":157,"column":44,"nodeType":"96","messageId":"97","endLine":157,"endColumn":45},{"ruleId":"94","severity":1,"message":"95","line":157,"column":90,"nodeType":"96","messageId":"97","endLine":157,"endColumn":91},{"ruleId":"98","severity":1,"message":"99","line":92,"column":22,"nodeType":"100","messageId":"101","endLine":92,"endColumn":24},{"ruleId":"98","severity":1,"message":"99","line":345,"column":24,"nodeType":"100","messageId":"101","endLine":345,"endColumn":26},{"ruleId":"98","severity":1,"message":"102","line":355,"column":15,"nodeType":"100","messageId":"101","endLine":355,"endColumn":17},{"ruleId":"88","severity":1,"message":"103","line":2,"column":5,"nodeType":"90","messageId":"91","endLine":2,"endColumn":11},{"ruleId":"88","severity":1,"message":"104","line":3,"column":5,"nodeType":"90","messageId":"91","endLine":3,"endColumn":16},{"ruleId":"88","severity":1,"message":"105","line":4,"column":5,"nodeType":"90","messageId":"91","endLine":4,"endColumn":14},{"ruleId":"88","severity":1,"message":"106","line":5,"column":5,"nodeType":"90","messageId":"91","endLine":5,"endColumn":11},{"ruleId":"88","severity":1,"message":"107","line":6,"column":5,"nodeType":"90","messageId":"91","endLine":6,"endColumn":15},{"ruleId":"88","severity":1,"message":"108","line":7,"column":5,"nodeType":"90","messageId":"91","endLine":7,"endColumn":13},{"ruleId":"88","severity":1,"message":"109","line":8,"column":5,"nodeType":"90","messageId":"91","endLine":8,"endColumn":15},{"ruleId":"88","severity":1,"message":"110","line":9,"column":5,"nodeType":"90","messageId":"91","endLine":9,"endColumn":17},{"ruleId":"84","replacedBy":"111"},{"ruleId":"86","replacedBy":"112"},{"ruleId":"88","severity":1,"message":"113","line":11,"column":5,"nodeType":"90","messageId":"91","endLine":11,"endColumn":8},{"ruleId":"114","severity":1,"message":"115","line":6,"column":13,"nodeType":"116","endLine":6,"endColumn":184},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'selectAll' is defined but never used.","'text' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.filter() expects a return value from arrow function.","'select' is defined but never used.","'scaleLinear' is defined but never used.","'scaleTime' is defined but never used.","'extent' is defined but never used.","'scalePoint' is defined but never used.","'axisLeft' is defined but never used.","'axisBottom' is defined but never used.","'scaleOrdinal' is defined but never used.",["117"],["118"],"'max' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]